'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var SimpleDatePicker = (function (_React$Component) {
  _inherits(SimpleDatePicker, _React$Component);

  _createClass(SimpleDatePicker, null, [{
    key: 'propTypes',
    value: {
      onChange: _react2['default'].PropTypes.func.isRequired,
      template: _react2['default'].PropTypes.func
    },
    enumerable: true
  }]);

  function SimpleDatePicker() {
    var _this = this;

    _classCallCheck(this, SimpleDatePicker);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _React$Component.call.apply(_React$Component, [this].concat(args));

    this.open = function () {
      _this.setState({ isOpen: true });
    };

    this.close = function () {
      _this.setState({ isOpen: false });
    };

    this.toggle = function () {
      _this.setState({ isOpen: !_this.state.isOpen });
    };

    this.onReset = function () {
      _this.setState({ isOpen: false }, function () {
        _this.props.onChange(null);
      });
    };

    this.onSelect = function (e, value) {
      _this.setState({ isOpen: false }, function () {
        _this.props.onChange(value);
      });
    };

    this.state = { isOpen: false };
  }

  SimpleDatePicker.prototype.getLocals = function getLocals() {
    return _extends({
      isOpen: this.state.isOpen,
      open: this.open,
      close: this.close,
      toggle: this.toggle,
      onReset: this.onReset,
      onSelect: this.onSelect
    }, this.props);
  };

  SimpleDatePicker.prototype.getTemplate = function getTemplate() {
    return this.props.template || this.constructor.template;
  };

  SimpleDatePicker.prototype.render = function render() {
    var template = this.getTemplate();
    return template(this.getLocals());
  };

  return SimpleDatePicker;
})(_react2['default'].Component);

exports['default'] = SimpleDatePicker;
module.exports = exports['default'];